{"ast":null,"code":"var _jsxFileName = \"/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ApolloClient from \"apollo-boost\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:3000/admin/api\"\n});\nimport gql from \"graphql-tag\";\nconst GET_DOGS = gql`\n  query {\n    allPosts(first: 10) {\n      url,\n      name\n    }\n  }\n`;\n\nconst Page = posts => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Posts\"), posts.allPosts.map(post => __jsx(\"div\", {\n  key: posts.url,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, post.url)));\n\nPage.getInitialProps = async () => {\n  const res = await client.query({\n    query: GET_DOGS\n  });\n  return res.data;\n};\n\nexport default Page;","map":{"version":3,"sources":["/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js"],"names":["ApolloClient","client","uri","gql","GET_DOGS","Page","posts","allPosts","map","post","url","getInitialProps","res","query","data"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,CAAiB;AAC9BE,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAGA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,QAAQ,GAAGD,GAAI;;;;;;;CAArB;;AASA,MAAME,IAAI,GAAGC,KAAK,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmBC,IAAI,IACtB;AAAK,EAAA,GAAG,EAAEH,KAAK,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAsBD,IAAI,CAACC,GAA3B,CADD,CAFH,CADF;;AASAL,IAAI,CAACM,eAAL,GAAuB,YAAY;AACjC,QAAMC,GAAG,GAAG,MAAMX,MAAM,CAACY,KAAP,CAAa;AAC7BA,IAAAA,KAAK,EAAET;AADsB,GAAb,CAAlB;AAGA,SAAOQ,GAAG,CAACE,IAAX;AACD,CALD;;AAOA,eAAeT,IAAf","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:3000/admin/api\"\n});\nimport gql from \"graphql-tag\";\n\nconst GET_DOGS = gql`\n  query {\n    allPosts(first: 10) {\n      url,\n      name\n    }\n  }\n`;\n\nconst Page = posts => (\n  <div>\n    <h1>Posts</h1>\n    {posts.allPosts.map(post => (\n      <div key={posts.url}>{post.url}</div>\n    ))}\n  </div>\n);\n\nPage.getInitialProps = async () => {\n  const res = await client.query({\n    query: GET_DOGS\n  });\n  return res.data;\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}