{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\n\nvar Index = function Index(props) {\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, \"Hello word\") // <Layout>\n  //   <ul>\n  //     {props.shows.map(show => (\n  //       <li key={show.id}>\n  //         <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n  //           <a>{show.name}</a>\n  //         </Link>\n  //       </li>\n  //     ))}\n  //   </ul>\n  // </Layout>\n  ;\n};\n\nIndex.getInitialProps = function _callee(_ref) {\n  var req, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref.req;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\\n  curl '/admin/api' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:3000' --data-binary '{\\\"query\\\":\\\"# Write your query or mutation here\\nquery {\\n  allPosts(first:10) {\\n    url,\\n    title,\\n    description,\\n  }\\n}\\\"}' --compressed\\n  \"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            stars: json.stargazers_count\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js"],"names":["fetch","Index","props","getInitialProps","req","res","json","stars","stargazers_count"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbiB;AAAA,CAAnB;;AAeAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,QAASA,GAAT;AAAA;AAAA,2CACJJ,KAAK,oXADD;;AAAA;AAChBK,UAAAA,GADgB;AAAA;AAAA,2CAIHA,GAAG,CAACC,IAAJ,EAJG;;AAAA;AAIhBA,UAAAA,IAJgB;AAAA,2CAKf;AAAEC,YAAAA,KAAK,EAAED,IAAI,CAACE;AAAd,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAOA,eAAeP,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\n\nconst Index = props => (\n  <h1>Hello word</h1>\n\n  // <Layout>\n  //   <ul>\n  //     {props.shows.map(show => (\n  //       <li key={show.id}>\n  //         <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n  //           <a>{show.name}</a>\n  //         </Link>\n  //       </li>\n  //     ))}\n  //   </ul>\n  // </Layout>\n);\nIndex.getInitialProps = async ({ req }) => {\n  const res = await fetch(`\n  curl '/admin/api' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:3000' --data-binary '{\"query\":\"# Write your query or mutation here\\nquery {\\n  allPosts(first:10) {\\n    url,\\n    title,\\n    description,\\n  }\\n}\"}' --compressed\n  `);\n  const json = await res.json();\n  return { stars: json.stargazers_count };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}