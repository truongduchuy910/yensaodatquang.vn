{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    allPosts(first: 10) {\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport ApolloClient from \"apollo-boost\";\nvar client = new ApolloClient({\n  uri: \"http://localhost:3000/admin/api\"\n});\nimport gql from \"graphql-tag\";\nvar GET_DOGS = gql(_templateObject());\n\nvar Page = function Page(posts) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, post.url);\n  }));\n};\n\nPage.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.query({\n            query: GET_DOGS\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Page;","map":{"version":3,"sources":["/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js"],"names":["ApolloClient","client","uri","gql","GET_DOGS","Page","posts","map","post","url","getInitialProps","query","res","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AAEA,IAAMC,MAAM,GAAG,IAAID,YAAJ,CAAiB;AAC9BE,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAGA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;;AAQA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACC,GAAX,CADa;AAAA,GAAd,CADH,CADgB;AAAA,CAAlB;;AAQAJ,IAAI,CAACK,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHT,MAAM,CAACU,KAAP,CAAa;AAC7BA,YAAAA,KAAK,EAAEP;AADsB,WAAb,CADG;;AAAA;AACfQ,UAAAA,GADe;AAAA,2CAIdA,GAAG,CAACC,IAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeR,IAAf","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:3000/admin/api\"\n});\nimport gql from \"graphql-tag\";\n\nconst GET_DOGS = gql`\n  query {\n    allPosts(first: 10) {\n      url\n    }\n  }\n`;\n\nconst Page = posts => (\n  <div>\n    {posts.map(post => (\n      <div>{post.url}</div>\n    ))}\n  </div>\n);\n\nPage.getInitialProps = async () => {\n  const res = await client.query({\n    query: GET_DOGS\n  });\n  return res.data;\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}