{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    allPosts(first: 10) {\\n      url\\n      title\\n      description\\n      image {\\n        publicUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport ApolloClient from \"apollo-boost\";\nimport Link from \"next/link\";\nvar client = new ApolloClient({\n  uri: \"http://localhost:3000/admin/api\"\n});\nimport gql from \"graphql-tag\";\nvar GET_DOGS = gql(_templateObject());\n\nvar Page = function Page(posts) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Posts\"), posts.allPosts.map(function (post) {\n    return __jsx(\"div\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: post.image.publicUrl,\n      style: \"max-width:100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), __jsx(Link, {\n      href: post.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, post.title)));\n  }));\n};\n\nPage.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.query({\n            query: GET_DOGS\n          }));\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Page;","map":{"version":3,"sources":["/home/truongduchuy910/apps/quantri.yensaodatquang.vn/app/pages/index.js"],"names":["ApolloClient","Link","client","uri","gql","GET_DOGS","Page","posts","allPosts","map","post","id","image","publicUrl","url","title","getInitialProps","query","res","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAGA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;;AAaA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,WACtB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWC,SAArB;AAAgC,MAAA,KAAK,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,IAAI,CAACI,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAI,CAACK,KAAT,CADF,CAFF,CADsB;AAAA,GAAvB,CAFH,CADgB;AAAA,CAAlB;;AAcAT,IAAI,CAACU,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHd,MAAM,CAACe,KAAP,CAAa;AAC7BA,YAAAA,KAAK,EAAEZ;AADsB,WAAb,CADG;;AAAA;AACfa,UAAAA,GADe;AAAA,2CAIdA,GAAG,CAACC,IAJU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeb,IAAf","sourcesContent":["import ApolloClient from \"apollo-boost\";\nimport Link from \"next/link\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:3000/admin/api\"\n});\nimport gql from \"graphql-tag\";\n\nconst GET_DOGS = gql`\n  query {\n    allPosts(first: 10) {\n      url\n      title\n      description\n      image {\n        publicUrl\n      }\n    }\n  }\n`;\n\nconst Page = posts => (\n  <div>\n    <h1>Posts</h1>\n    {posts.allPosts.map(post => (\n      <div key={post.id}>\n        <img src={post.image.publicUrl} style={`max-width:100%`}></img>\n        <Link href={post.url}>\n          <a>{post.title}</a>\n        </Link>\n      </div>\n    ))}\n  </div>\n);\n\nPage.getInitialProps = async () => {\n  const res = await client.query({\n    query: GET_DOGS\n  });\n  return res.data;\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}